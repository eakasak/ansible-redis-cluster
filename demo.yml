- name: test-install-redis
  hosts: all
  gather_facts: yes
  become_user: root
  become: yes
  vars:    
    ansible_connection: "ssh"
    ansible_port: 22
    ansible_user: "demo"
    ansible_ssh_pass: "AaBb54321@@"
    ansible_sudo_pass: "AaBb54321@@"
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    REDIS_VERSION: '5.0.9'
    PATH_INSTALL: '/data'
    ip: '10.100.65.201'
    nodetimeout: '5000'
    maxclients: '50000'
    maxmemory: '4gb'
    redisport: '7001'
    requirepass: 'VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN'
  tasks:
    # - debug: msg=test
    - name: Create
      command:  pwd
    - name: Install gcc
      command: yum -y install gcc
    - name: Install tcl
      command: yum -y install tcl
    - name: Create a directory {{ PATH_INSTALL }} if it does not exist
      file:
        path: '{{ PATH_INSTALL }}'
        state: directory
        mode: '0755'
      become: yes
    - name: Download Redis File Install Version {{ REDIS_VERSION }}
      get_url:
        url: https://download.redis.io/releases/redis-{{ REDIS_VERSION }}.tar.gz
        dest: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}.tar.gz'
      become: yes
    - name: Unarchive redis-{{ REDIS_VERSION }}.tar.gz
      command: tar -xvf redis-{{ REDIS_VERSION }}.tar.gz chdir={{ PATH_INSTALL }}
    - name: Build the default target
      make:
        chdir: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}'
    - name: Run 'install' target as root
      make:
        chdir: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}'
        target: install
    - name: Disable SELinux
      selinux:
        state: disabled
    - name: stop firewall service
      service:
        name: firewalld
        state: stopped
        enabled: no
    - name: install_server backup 
      command: mv {{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/install_server.sh {{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/install_server_backup.sh
    - name: Download install_server file
      get_url:
        url: https://raw.githubusercontent.com/eakasak/redis/main/install_server.sh
        dest: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/'
        mode: '0755'    
    - name: install_server backup 
      command: mv {{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/install_server.sh {{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/install_server_backup.sh
    - name: Download install_server file
      get_url:
        url: https://raw.githubusercontent.com/eakasak/redis/main/install_server.sh
        dest: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/'
        mode: '0755'
    - name: edit install_server port 6379 {{ redisport }}
      lineinfile:
        path: '{{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils/install_server.sh'
        regexp: 'REDIS_PORT=6379'
        line: 'REDIS_PORT={{ redisport }}'
    - name: install_server
      command: ./install_server.sh chdir={{ PATH_INSTALL }}/redis-{{ REDIS_VERSION }}/utils
    - name: Insert configuration cluster config file
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# cluster-config-file nodes-6379.conf'
        line: 'cluster-config-file nodes-{{ redisport }}.conf'
    - name: Insert configuration bind section
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: 'bind 127.0.0.1'
        line: 'bind {{ ip }}'
    - name: Insert configuration requirepass 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# requirepass foobared'
        line: 'requirepass {{ requirepass }}'
    - name: Insert configuration protected mode 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: 'protected-mode yes'
        line: 'protected-mode no'
    - name: Insert configuration maxclients 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# maxclients 10000'
        line: 'maxclients {{ maxclients }}'
    - name: Insert configuration masterauth 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# masterauth <master-password>'
        line: 'masterauth {{ requirepass }}'
    - name: Insert configuration cluster enabled 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# cluster-enabled yes'
        line: 'cluster-enabled yes'
    - name: Insert configuration cluster node timeout
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# cluster-node-timeout 15000'
        line: 'cluster-node-timeout {{ nodetimeout }}'
    - name: Insert configuration maxmemory policy 
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# maxmemory-policy noeviction'
        line: 'maxmemory-policy volatile-lru'
    - name: Insert configuration maxmemory  
      lineinfile:
        path: /etc/redis-{{ redisport }}/redis.conf
        regexp: '# maxmemory <bytes>'
        line: 'maxmemory {{ maxmemory }}' 

- name: Enable auto start and Start redis service
  hosts: all
  become: yes
  become_user: root
  gather_facts: no
  vars:
    ansible_connection: "ssh"
    ansible_port: 22
    ansible_user: "demo"
    ansible_ssh_pass: "AaBb54321@@"
    ansible_sudo_pass: "AaBb54321@@"
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    redisport: '7001'
  tasks:
    - name: Enable auto start
      command: systemctl enable redis_{{ redisport }}

    - name: Restart for all server
      reboot:

- name: Cluster Create
  hosts: redis1
  become_user: demo
  become: yes
  gather_facts: no
  vars:
    ansible_connection: "ssh"
    ansible_port: 22
    ansible_user: "demo"
    ansible_ssh_pass: "AaBb54321@@"
    ansible_sudo_pass: "AaBb54321@@"
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    clustercommand: "redis-cli -a VP53tHYgfxcHRLFDtuLGnmhKXRuUafaN --cluster create 10.100.65.201:7001 10.100.65.202:7001 10.100.65.203:7001 10.100.65.204:7001 10.100.65.205:7001 10.100.65.206:7001 --cluster-replicas 1 --cluster-yes"
  tasks:
        - name: Create
          command:  "{{ clustercommand }}"
          ignore_errors: yes
